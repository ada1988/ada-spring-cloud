#强制不注册到注册服务器(表示是否将自己注册到Eureka Server，默认为true。由于当前这个应用就是Eureka Server，故而设为false  )
eureka.client.register-with-eureka=false
# eureka.client.fetchRegistry ：表示是否从Eureka Server获取注册信息，默认为true。因为这是一个单点的Eureka Server，不需要同步其他的Eureka Server节点的数据，故而设为false。 
#是否从Eureka获取
eureka.client.fetch-registry=false
#enableSelfPreservation: false表示在此eureka服务器中关闭自我保护模式，所谓自我保护模式是指，出现网络分区、eureka在短时间内丢失过;
#多客户端时，会进入自我保护模式，即一个服务长时间没有发送心跳，eureka也不会将其删除。默认为true
eureka.server.enable-self-preservation=false
#驱逐下线的服务，间隔,5秒，默认是60，建议开发和测试环境配置
#org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean.evictionIntervalTimerInMs
#eureka.server.evictionIntervalTimerInMs=5000
#注册服务默认心跳时间为30秒，当一个服务器不可用，需要3个心跳才能让服务器和客户端的元数据相同。可以使用eureka.instance.leaseRenewalIntervalInSeconds加快这个过程。在生产环境最好使用默认配置。

# eureka.client.serviceUrl.defaultZone ：设置与Eureka Server交互的地址，查询服务和注册服务都需要依赖这个地址。默认是http://localhost:8761/eureka ；多个地址可使用 , 分隔。  
#eureka.client.serviceUrl.defaultZone = http://192.168.4.186:6666/ada-eureka/
#关闭com.netflix.eureka 包下的日志
logging.level.com.netflix.eureka=OFF
#关闭com.netflix.discovery 包下的日志
logging.level.com.netflix.discovery=OFF
# 安全认证的配置  添加后，客户端无法注册、发现，并且添加spring-boot-starter-security依赖
# 启用基本身份认证
#security.basic.enabled=true
# 拦截策略，以逗号分隔
#security.basic.path=/**
# 默认用户名
#security.user.name=admin
# 默认用户名密码
#security.user.password=admin